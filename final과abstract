[final]

1) 변수 
	- 변수 앞에 final 오면 상수가 됨
	- 값 변경 불가, 상수는 모두 대문자로 표현(단어와 단어 조합시 구분이 안되니깐 상수만 언더바 허용)
	- 일반 전역 변수와 달리 final 붙은 변수는 전역 변수와 달리 반드시 초기화해야 함

2) 메소드
	- 메소드 앞에 오면 오버라이딩(재정의) 불가
	ex)public final void aa(){}

3) 클래스
	- 클래스 앞에 오면 상속 안됨(부모 클래스 될 수 없음, 객체 생성 가능)


[abstract]

1) 변수
	-변수 앞에 올 수 없어서 의미 없음

2) 메소드
	- 중괄호 없음!!!!!!!!!!!!!!(기능이 없는 껍데기) : 선언부만 있고 구현부 없다(기능 없음)
	ex) public abstract void aa();  
	서브 클래스에서 재정의하기 위해 존재(final과 다른 점)
	
	- abstract 메소드를 가지고 있는 클래스는 반드시 abstract class로 선언

3) 클래스
	- abstract class는 생성 불가(new 사용 불가) -> 무조건 부모 클래스가 되기 위해 존재!!!!!(final과 다른 점)
	- 다른 클래스의 부모가 되기 위해 존재
	- 부모 클래스가 abstract method를 가지고 있으면 자식 클래스는 abstract method를 재정의해야 함!!!!!
	  -> 재정의하지 않으면 자식 클래스는 abstact method 갖고 있으니 abstract class가 되고
	     또다시 생성 안되고 메소드 기능도 없음
	  -> 따라서 재정의할 때 modifier인 abstract를 버리고 기능을 넣는다 

